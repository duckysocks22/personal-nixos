# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a7403385-42d4-47be-81a1-8a4437be76e6";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-f7ce0d58-c364-42ed-9bd6-ead67edfd96d".device = "/dev/disk/by-uuid/f7ce0d58-c364-42ed-9bd6-ead67edfd96d";
  boot.initrd.luks.devices."luks-f0999c13-4fac-4de9-b8be-36d6628e56b4".device = "/dev/disk/by-uuid/f0999c13-4fac-4de9-b8be-36d6628e56b4";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/09E9-6D45";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/0d7997d2-bf6d-49ad-8518-1fe306055351"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp36s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
